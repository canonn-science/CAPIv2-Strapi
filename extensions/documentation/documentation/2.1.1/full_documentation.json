{
  "openapi": "3.0.0",
  "info": {
    "version": "2.1.1",
    "title": "Canonn APIv2",
    "description": "An API for all the Science related information Canonn has in its datastores stored on the Gnosis, built using [Strapi](https://strapi.io) a Nodejs API framework.",
    "termsOfService": "https://docs.canonn.tech/auth/security.html#reasons-for-being-blacklisted",
    "contact": {
      "name": "Canonn R&D Team",
      "email": "rd@canonn.tech",
      "url": "https://canonn.science"
    },
    "license": {
      "name": "GNU-GPLv3",
      "url": "https://github.com/canonn-science/CAPIv2-Strapi/blob/development/LICENSE"
    },
    "x-generation-date": "03/05/2020 9:35:33 AM"
  },
  "x-strapi-config": {
    "path": "/documentation",
    "showGeneratedFiles": true
  },
  "servers": [
    {
      "url": "https://api.canonn.tech:2053",
      "description": "Beta Staging Server, should be used to test your application prior to deployment. "
    },
    {
      "url": "https://api.canonn.tech",
      "description": "Live Production Server, should be used if your application has been tested and deployed."
    },
    {
      "url": "https://api.canonn.tech:2083",
      "description": "Alpha Development Server, used by Canonn to test development prior to updating Staging and Production. "
    },
    {
      "url": "http://localhost:1337",
      "description": "If you are running a local server for testing."
    }
  ],
  "externalDocs": {
    "description": "Canonn API Reference Documentation",
    "url": "https://docs.canonn.tech"
  },
  "security": [
    {
      "bearerAuth": [],
      "userAuth": [
        "cmdrWrite",
        "uploadWrite"
      ],
      "canonnAuth": [
        "adminOnlyDelete",
        "reportDelete",
        "locationDelete",
        "cmdrDelete",
        "uploadDelete",
        "journalDelete",
        "siteDelete",
        "updateLogDelete",
        "adminOnlyWrite",
        "locationWrite",
        "siteWrite",
        "updateLogWrite",
        "cmdrUpdate",
        "cmdrKillWrite"
      ]
    }
  ],
  "paths": {
    "/apiupdates": {
      "get": {
        "deprecated": false,
        "description": "Get all CAPIv2-Updater log entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Apiupdate"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CAPIv2-Updater log entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apiupdate"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApiupdate"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/apiupdates/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CAPIv2-Updater log entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/apiupdates/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CAPIv2-Updater log by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apiupdate"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CAPIv2-Updater log by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apiupdate"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApiupdate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CAPIv2-Updater log by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/apreports": {
      "get": {
        "deprecated": false,
        "description": "Get all AP report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Apreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new AP report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/apreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all AP report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/apreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a AP report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a AP report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a AP report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plant Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/apsites": {
      "get": {
        "deprecated": false,
        "description": "Get all AP Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Apsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new AP Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/apsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all AP Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/apsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a AP Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a AP Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewApsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a AP Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/aptypes": {
      "get": {
        "deprecated": false,
        "description": "Get all AP Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Aptype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new AP Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aptype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAptype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/aptypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all AP Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/aptypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a AP Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aptype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a AP Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aptype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAptype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a AP Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Amphora Plants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/authtokens": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Authtoken"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authtoken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAuthtoken"
              }
            }
          }
        }
      }
    },
    "/authtokens/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "parameters": []
      }
    },
    "/authtokens/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authtoken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authtoken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAuthtoken"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authtoken"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/axczfssreports": {
      "get": {
        "deprecated": false,
        "description": "Get all AX CZ FSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Axczfssreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new AX CZ FSS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Axczfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAxczfssreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/axczfssreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all AX CZ FSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/axczfssreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a AX CZ FSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Axczfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a AX CZ FSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Axczfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAxczfssreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a AX CZ FSS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "AX Combat Zone Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/bmreports": {
      "get": {
        "deprecated": false,
        "description": "Get all BM report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bmreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BM report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/bmreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BM report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/bmreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BM report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BM report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BM report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mound Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/bmsites": {
      "get": {
        "deprecated": false,
        "description": "Get all BM Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bmsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BM Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/bmsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BM Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/bmsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BM Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BM Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BM Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/bmtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all BM Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bmtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BM Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/bmtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BM Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/bmtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BM Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BM Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBmtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BM Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bark Mounds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bodies": {
      "get": {
        "deprecated": false,
        "description": "Get all Body entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Body"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Body entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBody"
              }
            }
          }
        },
        "security": [
          "locationWrite"
        ]
      }
    },
    "/bodies/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Body entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/bodies/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Body by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Body by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBody"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Body by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Bodies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationDelete"
        ]
      }
    },
    "/btreports": {
      "get": {
        "deprecated": false,
        "description": "Get all BT report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Btreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BT report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBtreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/btreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BT report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/btreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BT report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BT report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBtreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BT report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Tree Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/btsites": {
      "get": {
        "deprecated": false,
        "description": "Get all BT Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Btsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BT Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBtsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/btsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BT Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/btsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BT Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BT Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Btsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBtsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BT Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/bttypes": {
      "get": {
        "deprecated": false,
        "description": "Get all BT Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bttype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new BT Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBttype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/bttypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all BT Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/bttypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a BT Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a BT Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBttype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a BT Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Brain Trees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clientreports": {
      "get": {
        "deprecated": false,
        "description": "Get all Client version report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clientreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Client version report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/clientreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Client version report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/clientreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Client version report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Client version report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Client version report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/clientroutes": {
      "get": {
        "deprecated": false,
        "description": "Get all Client version route entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clientroute"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Client version route entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientroute"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientroute"
              }
            }
          }
        },
        "security": []
      }
    },
    "/clientroutes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Client version route entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/clientroutes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Client version route by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientroute"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Client version route by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Clientroute"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientroute"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Client version route by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/cmdrs": {
      "get": {
        "deprecated": false,
        "description": "Get all CMDR entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cmdr"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CMDR entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCmdr"
              }
            }
          }
        },
        "security": [
          "cmdrWrite"
        ]
      }
    },
    "/cmdrs/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CMDR entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/cmdrs/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CMDR by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CMDR by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCmdr"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "cmdrUpdate"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CMDR by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "cmdrDelete"
        ]
      }
    },
    "/cmdrkills": {
      "get": {
        "deprecated": false,
        "description": "Get all CMDR Kill entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cmdrkill"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CMDR Kill entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdrkill"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCmdrkill"
              }
            }
          }
        },
        "security": [
          "cmdrKillWrite"
        ]
      }
    },
    "/cmdrkills/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CMDR Kill entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/cmdrkills/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CMDR Kill by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdrkill"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CMDR Kill by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cmdrkill"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCmdrkill"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "cmdrUpdate"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CMDR Kill by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "cmdrDelete"
        ]
      }
    },
    "/csreports": {
      "get": {
        "deprecated": false,
        "description": "Get all CS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Csreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Csreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCsreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/csreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/csreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Csreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Csreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCsreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shard Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/cssites": {
      "get": {
        "deprecated": false,
        "description": "Get all CS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cssite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CS Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCssite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/cssites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/cssites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCssite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CS Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/cstypes": {
      "get": {
        "deprecated": false,
        "description": "Get all CS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cstype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CS Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCstype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/cstypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/cstypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCstype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CS Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Crystalline Shards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/excludeclients": {
      "get": {
        "deprecated": false,
        "description": "Get all Client Version Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Excludeclient"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Client Version Blacklist entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeclient"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludeclient"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludeclients/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Client Version Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/excludeclients/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Client Version Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeclient"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Client Version Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeclient"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludeclient"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Client Version Blacklist by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludecmdrs": {
      "get": {
        "deprecated": false,
        "description": "Get all CMDR Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Excludecmdr"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CMDR Blacklist entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludecmdr"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludecmdrs/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CMDR Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/excludecmdrs/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CMDR Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CMDR Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecmdr"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludecmdr"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CMDR Blacklist by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludecodices": {
      "get": {
        "deprecated": false,
        "description": "Get all Codex Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Excludecodex"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Codex Blacklist entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludecodex"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludecodices/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Codex Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/excludecodices/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Codex Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Codex Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludecodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludecodex"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Codex Blacklist by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludeevents": {
      "get": {
        "deprecated": false,
        "description": "Get all Journal Event Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Excludeevent"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Journal Event Blacklist entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludeevent"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludeevents/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Journal Event Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/excludeevents/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Journal Event Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Journal Event Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludeevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludeevent"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Journal Event Blacklist by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludefsses": {
      "get": {
        "deprecated": false,
        "description": "Get all FSS Scan Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Excludefss"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FSS Scan Blacklist entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludefss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludefss"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/excludefsses/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FSS Scan Blacklist entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/excludefsses/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FSS Scan Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludefss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FSS Scan Blacklist by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Excludefss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExcludefss"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FSS Scan Blacklist by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/fgreports": {
      "get": {
        "deprecated": false,
        "description": "Get all FG report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fgreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FG report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/fgreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FG report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fgreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FG report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FG report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FG report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourd Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/fgsites": {
      "get": {
        "deprecated": false,
        "description": "Get all FG Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fgsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FG Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/fgsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FG Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fgsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FG Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FG Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FG Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/fgtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all FG Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fgtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FG Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/fgtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FG Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fgtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FG Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FG Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fgtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFgtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FG Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fungal Gourds"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/fmreports": {
      "get": {
        "deprecated": false,
        "description": "Get all FM report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fmreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FM report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/fmreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FM report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fmreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FM report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FM report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FM report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumarole Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/fmsites": {
      "get": {
        "deprecated": false,
        "description": "Get all FM Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fmsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FM Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/fmsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FM Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fmsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FM Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FM Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FM Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/fmtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all FM Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fmtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FM Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/fmtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FM Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/fmtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FM Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FM Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fmtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFmtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FM Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Fumaroles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/gbmessages": {
      "get": {
        "deprecated": false,
        "description": "Get all GB Message entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gbmessage"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GB Message entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbmessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbmessage"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gbmessages/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GB Message entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gbmessages/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GB Message by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbmessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GB Message by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbmessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbmessage"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GB Message by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/gbreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GB report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gbreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GB report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/gbreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GB report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gbreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GB report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GB report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GB report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacon Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gbsites": {
      "get": {
        "deprecated": false,
        "description": "Get all GB Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gbsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GB Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gbsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GB Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gbsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GB Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GB Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGbsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GB Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Beacons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/genlogs": {
      "get": {
        "deprecated": false,
        "description": "Get all GEN Log entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genlog"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GEN Log entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genlog"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGenlog"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/genlogs/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GEN Log entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/genlogs/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GEN Log by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genlog"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GEN Log by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genlog"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGenlog"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GEN Log by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/genreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GEN report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GEN report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGenreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/genreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GEN report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/genreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GEN report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GEN report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGenreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GEN report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ship Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gensites": {
      "get": {
        "deprecated": false,
        "description": "Get all GEN Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gensite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GEN Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gensite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGensite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gensites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GEN Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gensites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GEN Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gensite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GEN Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gensite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGensite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GEN Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Generation Ships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/info": {
      "get": {
        "deprecated": false,
        "description": "Get core information about the CAPIv2 and version info",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/version": {
      "get": {
        "deprecated": false,
        "description": "Get only the Strapi version and CAPIv2 Version",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/totalcount": {
      "get": {
        "deprecated": false,
        "description": "Get total counts of sites and count of reports by tag",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/stats": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Global"
        ],
        "parameters": []
      }
    },
    "/nearby": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Global"
        ],
        "parameters": []
      }
    },
    "/gractivegroups": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Site Active Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gractivegroup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Site Active Group entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGractivegroup"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gractivegroups/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Site Active Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gractivegroups/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Site Active Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Site Active Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGractivegroup"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Site Active Group by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/gractiveobelisks": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Site Active Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gractiveobelisk"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Site Active Obelisk entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGractiveobelisk"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gractiveobelisks/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Site Active Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gractiveobelisks/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gractiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGractiveobelisk"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grartifacts": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Artifact entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grartifact"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Artifact entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrartifact"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grartifacts/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Artifact entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grartifacts/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Artifact by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Artifact by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrartifact"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Artifact by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grcodexcategories": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Codex Category entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grcodexcategory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Codex Category entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrcodexcategory"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grcodexcategories/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Codex Category entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grcodexcategories/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Codex Category by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Codex Category by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrcodexcategory"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Codex Category by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grcodexdata": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Codex Data entries",
        "responses": {
          "200": {
            "description": "Retrieve grcodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grcodexdata"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Codex Data entry",
        "responses": {
          "200": {
            "description": "Retrieve grcodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrcodexdata"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grcodexdata/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Codex Data entries",
        "responses": {
          "200": {
            "description": "Retrieve grcodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grcodexdata/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Codex Data by id",
        "responses": {
          "200": {
            "description": "Retrieve grcodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Codex Data by id",
        "responses": {
          "200": {
            "description": "Retrieve grcodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grcodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrcodexdata"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Codex Data by id",
        "responses": {
          "200": {
            "description": "deletes a single grcodexdata based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grobelisks": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grobelisk"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Obelisk entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobelisk"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grobelisks/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grobelisks/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobelisk"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Obelisk by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grobeliskgroups": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Obelisk Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grobeliskgroup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Obelisk Group entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobeliskgroup"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grobeliskgroups/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Obelisk Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grobeliskgroups/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Obelisk Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Obelisk Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobeliskgroup"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Obelisk Group by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grobeliskreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Obelisk report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grobeliskreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Obelisk report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobeliskreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/grobeliskreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Obelisk report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grobeliskreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Obelisk report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Obelisk report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrobeliskreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Obelisk report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GR report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/grreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruin Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grsites": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/grtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all GR Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GR Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/grtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GR Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/grtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GR Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GR Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GR Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Ruins"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsactivegroups": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Site Active Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsactivegroup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Site Active Group entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsactivegroup"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gsactivegroups/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Site Active Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsactivegroups/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Site Active Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Site Active Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactivegroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsactivegroup"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Site Active Group by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsactiveobelisks": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Site Active Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsactiveobelisk"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Site Active Obelisk entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsactiveobelisk"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gsactiveobelisks/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Site Active Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsactiveobelisks/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsactiveobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsactiveobelisk"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Site Active Obelisk by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsartifacts": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Artifact entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsartifact"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Artifact entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsartifact"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gsartifacts/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Artifact entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsartifacts/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Artifact by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Artifact by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsartifact"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsartifact"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Artifact by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gscodexcategories": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Codex Category entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gscodexcategory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Codex Category entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGscodexcategory"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gscodexcategories/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Codex Category entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gscodexcategories/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Codex Category by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Codex Category by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexcategory"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGscodexcategory"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Codex Category by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gscodexdata": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Codex Data entries",
        "responses": {
          "200": {
            "description": "Retrieve gscodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gscodexdata"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Codex Data entry",
        "responses": {
          "200": {
            "description": "Retrieve gscodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGscodexdata"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gscodexdata/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Codex Data entries",
        "responses": {
          "200": {
            "description": "Retrieve gscodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gscodexdata/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Codex Data by id",
        "responses": {
          "200": {
            "description": "Retrieve gscodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Codex Data by id",
        "responses": {
          "200": {
            "description": "Retrieve gscodexdata document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gscodexdata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGscodexdata"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Codex Data by id",
        "responses": {
          "200": {
            "description": "deletes a single gscodexdata based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsobelisks": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsobelisk"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Obelisk entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobelisk"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gsobelisks/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Obelisk entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsobelisks/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Obelisk by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobelisk"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobelisk"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Obelisk by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsobeliskgroups": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Obelisk Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsobeliskgroup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Obelisk Group entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobeliskgroup"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gsobeliskgroups/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Obelisk Group entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsobeliskgroups/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Obelisk Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Obelisk Group by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskgroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobeliskgroup"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Obelisk Group by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gsobeliskreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Obelisk report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsobeliskreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Obelisk report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobeliskreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/gsobeliskreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Obelisk report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsobeliskreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Obelisk report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Obelisk report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsobeliskreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsobeliskreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Obelisk report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gsreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/gsreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gsreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGsreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gssites": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gssite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGssite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gssites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gssites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGssite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gstypes": {
      "get": {
        "deprecated": false,
        "description": "Get all GS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gstype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GS Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGstype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gstypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gstypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGstype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GS Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Guardian Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gvreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GV report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GV report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/gvreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GV report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gvreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GV report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GV report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GV report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vent Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gvsites": {
      "get": {
        "deprecated": false,
        "description": "Get all GV Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GV Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gvsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GV Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gvsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GV Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GV Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GV Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gvtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all GV Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GV Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gvtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GV Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gvtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GV Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GV Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gvtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGvtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GV Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Gas Vents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gyreports": {
      "get": {
        "deprecated": false,
        "description": "Get all GY report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gyreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GY report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gyreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGyreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/gyreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GY report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gyreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GY report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gyreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GY report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gyreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGyreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GY report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geyser Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/gysites": {
      "get": {
        "deprecated": false,
        "description": "Get all GY Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gysite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GY Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gysite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGysite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gysites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GY Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gysites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GY Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gysite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GY Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gysite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGysite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GY Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/gytypes": {
      "get": {
        "deprecated": false,
        "description": "Get all GY Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gytype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new GY Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gytype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGytype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/gytypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all GY Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/gytypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a GY Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gytype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a GY Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gytype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGytype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a GY Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Geysers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/hdreports": {
      "get": {
        "deprecated": false,
        "description": "Get all HD report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hdreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new HD report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hdreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewHdreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/hdreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all HD report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/hdreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a HD report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hdreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a HD report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hdreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewHdreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a HD report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Hyperdiction Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/killreports": {
      "get": {
        "deprecated": false,
        "description": "Get all CMDR Kill Report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Killreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new CMDR Kill Report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Killreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewKillreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/killreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all CMDR Kill Report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/killreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a CMDR Kill Report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Killreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a CMDR Kill Report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Killreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewKillreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a CMDR Kill Report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "CMDRs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "cmdrDelete"
        ]
      }
    },
    "/lcfssreports": {
      "get": {
        "deprecated": false,
        "description": "Get all LC FSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lcfssreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new LC FSS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lcfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLcfssreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/lcfssreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all LC FSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/lcfssreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a LC FSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lcfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a LC FSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lcfssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLcfssreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a LC FSS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lagrange Cloud Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/lsreports": {
      "get": {
        "deprecated": false,
        "description": "Get all LS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lsreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new LS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLsreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/lsreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all LS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/lsreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a LS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a LS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLsreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a LS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spout Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/lssites": {
      "get": {
        "deprecated": false,
        "description": "Get all LS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lssite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new LS Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLssite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/lssites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all LS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/lssites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a LS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a LS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLssite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a LS Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/lstypes": {
      "get": {
        "deprecated": false,
        "description": "Get all LS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lstype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new LS Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLstype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/lstypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all LS Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/lstypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a LS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a LS Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lstype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLstype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a LS Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Lava Spouts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/materialreports": {
      "get": {
        "deprecated": false,
        "description": "Get all Material Report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Materialreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Material Report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Materialreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMaterialreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/materialreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Material Report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/materialreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Material Report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Materialreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Material Report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Materialreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMaterialreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Material Report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Material Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/nhssreports": {
      "get": {
        "deprecated": false,
        "description": "Get all NHSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nhssreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new NHSS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nhssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNhssreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/nhssreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all NHSS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/nhssreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a NHSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nhssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a NHSS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nhssreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNhssreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a NHSS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Non-Human Signal Source Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/permitlocks": {
      "get": {
        "deprecated": false,
        "description": "Get all Permit Lock entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permitlock"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permit Locks"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Permit Lock entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permitlock"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permit Locks"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPermitlock"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/permitlocks/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Permit Lock entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permit Locks"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/permitlocks/{_id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permitlock"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permitlock"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permitlock"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permitlock"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPermitlock"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Permitlock"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "deprecated": false,
        "description": "Get all Region entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Region entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegion"
              }
            }
          }
        },
        "security": [
          "locationWrite"
        ]
      }
    },
    "/regions/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Region entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/regions/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Region by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Region by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegion"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Region by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationDelete"
        ]
      }
    },
    "/reportcodices": {
      "get": {
        "deprecated": false,
        "description": "Get all Codex Journal Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reportcodex"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Codex Journal Debug entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportcodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportcodex"
              }
            }
          }
        },
        "security": []
      }
    },
    "/reportcodices/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Codex Journal Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/reportcodices/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Codex Journal Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportcodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Codex Journal Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportcodex"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportcodex"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Codex Journal Debug by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/reportevents": {
      "get": {
        "deprecated": false,
        "description": "Get all Journal Event Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reportevent"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Journal Event Debug entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportevent"
              }
            }
          }
        },
        "security": []
      }
    },
    "/reportevents/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Journal Event Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/reportevents/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Journal Event Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Journal Event Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportevent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportevent"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Journal Event Debug by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/reportfsses": {
      "get": {
        "deprecated": false,
        "description": "Get all FSS Scan Event Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reportfss"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new FSS Scan Event Debug entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportfss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportfss"
              }
            }
          }
        },
        "security": []
      }
    },
    "/reportfsses/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all FSS Scan Event Debug entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/reportfsses/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a FSS Scan Event Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportfss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a FSS Scan Event Debug by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reportfss"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReportfss"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a FSS Scan Event Debug by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/reporttypes": {
      "get": {
        "deprecated": false,
        "description": "Get all Report Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reporttype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Report Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reporttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReporttype"
              }
            }
          }
        },
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/reporttypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Report Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/reporttypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Report Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reporttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Report Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reporttype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReporttype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Report Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Canonn Use"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "updateLogWrite"
        ]
      }
    },
    "/rings": {
      "get": {
        "deprecated": false,
        "description": "Get all Ring entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ring"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new Ring entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ring"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRing"
              }
            }
          }
        },
        "security": [
          "locationWrite"
        ]
      }
    },
    "/rings/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all Ring entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/rings/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a Ring by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ring"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a Ring by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ring"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRing"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a Ring by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Rings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationDelete"
        ]
      }
    },
    "/systems": {
      "get": {
        "deprecated": false,
        "description": "Get all System entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/System"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new System entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSystem"
              }
            }
          }
        },
        "security": [
          "locationWrite"
        ]
      }
    },
    "/systems/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all System entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/systems/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a System by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a System by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSystem"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a System by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Systems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "locationDelete"
        ]
      }
    },
    "/tbcycles": {
      "get": {
        "deprecated": false,
        "description": "Get all TB Cycle entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tbcycle"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TB Cycle entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbcycle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbcycle"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tbcycles/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TB Cycle entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tbcycles/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TB Cycle by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbcycle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TB Cycle by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbcycle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbcycle"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TB Cycle by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/tbreports": {
      "get": {
        "deprecated": false,
        "description": "Get all TB report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tbreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TB report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/tbreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TB report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tbreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TB report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TB report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TB report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacle Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/tbsites": {
      "get": {
        "deprecated": false,
        "description": "Get all TB Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tbsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TB Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tbsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TB Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tbsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TB Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TB Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TB Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/tbsubtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all TB Subtype entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tbsubtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TB Subtype entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsubtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbsubtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tbsubtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TB Subtype entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tbsubtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TB Subtype by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsubtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TB Subtype by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbsubtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbsubtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TB Subtype by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/tbtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all TB Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tbtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TB Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tbtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TB Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tbtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TB Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TB Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tbtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTbtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TB Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Barnacles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/tsreports": {
      "get": {
        "deprecated": false,
        "description": "Get all TS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tsreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TS report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTsreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/tsreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TS report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tsreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TS report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTsreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TS report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structure Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/tssites": {
      "get": {
        "deprecated": false,
        "description": "Get all TS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tssite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TS Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTssite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tssites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TS Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tssites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TS Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tssite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTssite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TS Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/tsstatuses": {
      "get": {
        "deprecated": false,
        "description": "Get all TS Status entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tsstatus"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TS Status entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsstatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTsstatus"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/tsstatuses/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TS Status entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/tsstatuses/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TS Status by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsstatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TS Status by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tsstatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTsstatus"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TS Status by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Thargoid Structures"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/twreports": {
      "get": {
        "deprecated": false,
        "description": "Get all TW report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Twreport"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TW report entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwreport"
              }
            }
          }
        },
        "security": []
      }
    },
    "/twreports/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TW report entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/twreports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TW report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TW report by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twreport"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwreport"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TW report by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worm Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "reportDelete"
        ]
      }
    },
    "/twsites": {
      "get": {
        "deprecated": false,
        "description": "Get all TW Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Twsite"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TW Site entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwsite"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/twsites/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TW Site entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/twsites/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TW Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TW Site by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twsite"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwsite"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TW Site by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/twtypes": {
      "get": {
        "deprecated": false,
        "description": "Get all TW Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Twtype"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ],
        "security": []
      },
      "post": {
        "deprecated": false,
        "description": "Create a new TW Type entry",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwtype"
              }
            }
          }
        },
        "security": [
          "siteWrite"
        ]
      }
    },
    "/twtypes/count": {
      "get": {
        "deprecated": false,
        "description": "Get a count of all TW Type entries",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/twtypes/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a TW Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      },
      "put": {
        "deprecated": false,
        "description": "Update a TW Type by id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Twtype"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTwtype"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteWrite"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a TW Type by id",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Tube Worms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          "siteDelete"
        ]
      }
    },
    "/email/": {
      "post": {
        "deprecated": false,
        "description": "Send an email using the provider defined through the dashboard",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "email"
                  },
                  "to": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "reply_to": {
                    "type": "string",
                    "format": "email"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Lorem ipsum title"
                  },
                  "text": {
                    "type": "string",
                    "example": "Lorem ipsum"
                  },
                  "html": {
                    "type": "string",
                    "format": "html",
                    "example": "<h1>Lorem ipsum</h1>"
                  }
                }
              }
            }
          }
        },
        "security": [
          "adminUsage"
        ]
      }
    },
    "/upload/": {
      "post": {
        "deprecated": false,
        "description": "Upload one or multiple files",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "hash": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "sha256": {
                        "type": "string"
                      },
                      "ext": {
                        "type": "string"
                      },
                      "mime": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "related": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "path": {
                    "type": "string",
                    "example": "/public/upload"
                  },
                  "refId": {
                    "type": "string",
                    "example": "5a993616b8e66660e8baf45c"
                  },
                  "ref": {
                    "type": "string",
                    "example": "user"
                  },
                  "source": {
                    "type": "string",
                    "example": "users-permissions"
                  },
                  "field": {
                    "type": "string",
                    "example": "avatar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/files/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the total number of uploaded files",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all file documents",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadFile"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single file depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an uploaded file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/upload/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for an uploaded file",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadFile"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/init": {
      "get": {
        "deprecated": false,
        "description": "Check if the first admin user has already been registered",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "hasAdmin": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": []
      }
    },
    "/users-permissions/roles/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a role depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all role documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users-PermissionsRole"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsers-PermissionsRole"
              }
            }
          }
        }
      }
    },
    "/users-permissions/roles/{role}": {
      "put": {
        "deprecated": false,
        "description": "Update a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsers-PermissionsRole"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for users",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users-PermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve a list of users by searching for their username or email",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A string matching a user's email or username",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/connect/*": {
      "get": {
        "deprecated": false,
        "description": "Connect a provider",
        "responses": {
          "200": {
            "description": "Your user is redirected"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Authenticate your user with a custom provider",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "deprecated": false,
            "description": "The name of the provider you want to use",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [],
        "externalDocs": {
          "description": "Find out more about the authentication flow in the strapi documentation",
          "url": "https://strapi.io/documentation/guides/authentication.html#providers"
        }
      }
    },
    "/auth/local": {
      "post": {
        "deprecated": false,
        "description": "Login a user using the identifiers email and password",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRegisterResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "The identifier param can either be an email or a username",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "identifier",
                  "password"
                ],
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "identifier": "hi@strapi.io",
                "password": "superSecure123"
              }
            }
          }
        },
        "externalDocs": {
          "description": "Find out more in the strapi's documentation",
          "url": "https://strapi.io/documentation/guides/authentication.html#login"
        },
        "security": []
      }
    },
    "/auth/local/register": {
      "post": {
        "deprecated": false,
        "description": "Register a new user with the default role",
        "responses": {
          "200": {
            "description": "Successfully register a user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRegisterResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "type": "string",
                    "minLength": 6
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "security": [],
        "externalDocs": {
          "description": "Find out more in the strapi's documentation",
          "url": "https://strapi.io/documentation/guides/authentication.html#usage"
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "deprecated": false,
        "description": "Successfull redirection after approving a provider",
        "responses": {
          "200": {
            "description": "Successfull redirection after approving a provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRegisterResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "The provider used to authenticate your user",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "externalDocs": {
          "description": "Find out more in the strapi's documentation",
          "url": "https://strapi.io/documentation/guides/authentication.html#providers"
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "deprecated": false,
        "description": "Send the reset password email link",
        "responses": {
          "200": {
            "description": "Email sent"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Send an email to reset your password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "hi@strapi.io",
                "url": "http://mon-site.com/rest-password"
              }
            }
          }
        },
        "security": [],
        "externalDocs": {
          "description": "Find out more in the strapi's documentation",
          "url": "https://strapi.io/documentation/guides/authentication.html#send-forgot-password-request"
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "deprecated": false,
        "description": "Change a user's password",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsRegisterResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "code",
                  "password",
                  "passwordConfirmation"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "deprecated": false,
        "description": "Validate a user account",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "security": []
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "deprecated": false,
        "description": "Send a confirmation email to user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Users-Permissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all user documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users-PermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the logged in user information",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Strapi Usage Only"
        ],
        "parameters": []
      }
    },
    "/users/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single user depending on his id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Users-Permissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users-PermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Users-Permissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsers-PermissionsUser"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Users-Permissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Apiupdate": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "updateTime": {
            "type": "datetime",
            "default": ""
          },
          "error": {
            "type": "boolean",
            "default": false
          },
          "notes": {
            "type": "string",
            "default": ""
          },
          "updateLog": {
            "type": "object",
            "default": ""
          }
        }
      },
      "NewApiupdate": {
        "properties": {
          "updateTime": {
            "type": "datetime",
            "default": ""
          },
          "error": {
            "type": "boolean",
            "default": false
          },
          "notes": {
            "type": "string",
            "default": ""
          },
          "updateLog": {
            "type": "object",
            "default": ""
          }
        }
      },
      "Apreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewApreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Apsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewApsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Aptype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewAptype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Authtoken": {
        "required": [
          "id",
          "token"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string",
            "minLength": 24
          },
          "comment": {
            "type": "string"
          },
          "user": {
            "required": [
              "id",
              "username",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "cmdrs": {
                "type": "string"
              },
              "authtokens": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewAuthtoken": {
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "minLength": 24
          },
          "comment": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "Axczfssreport": {
        "required": [
          "id",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "signalName": {
            "type": "string"
          },
          "signalNameLocalised": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "NewAxczfssreport": {
        "required": [
          "reportStatus"
        ],
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "signalName": {
            "type": "string"
          },
          "signalNameLocalised": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "Bmreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBmreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Bmsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBmsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Bmtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewBmtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Body": {
        "required": [
          "id",
          "bodyName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "bodyName": {
            "type": "string"
          },
          "id64": {
            "type": "integer"
          },
          "edsmID": {
            "type": "integer"
          },
          "bodyID": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "offset": {
            "type": "integer"
          },
          "distanceToArrival": {
            "type": "integer"
          },
          "isMainStar": {
            "type": "boolean"
          },
          "isScoopable": {
            "type": "boolean"
          },
          "isLandable": {
            "type": "boolean"
          },
          "age": {
            "type": "integer"
          },
          "luminosity": {
            "type": "string"
          },
          "absoluteMagnitude": {
            "type": "number"
          },
          "solarMasses": {
            "type": "number"
          },
          "solarRadius": {
            "type": "number"
          },
          "gravity": {
            "type": "number"
          },
          "earthMasses": {
            "type": "number"
          },
          "radius": {
            "type": "number"
          },
          "surfaceTemperature": {
            "type": "number"
          },
          "surfacePressure": {
            "type": "number"
          },
          "volcanismType": {
            "type": "string"
          },
          "atmosphereType": {
            "type": "string"
          },
          "terraformingState": {
            "type": "string"
          },
          "orbitalPeriod": {
            "type": "number"
          },
          "semiMajorAxis": {
            "type": "number"
          },
          "orbitalEccentricity": {
            "type": "number"
          },
          "orbitalInclination": {
            "type": "number"
          },
          "argOfPeriapsis": {
            "type": "number"
          },
          "rotationalPeriod": {
            "type": "number"
          },
          "rotationalPeriodTidallyLocked": {
            "type": "boolean"
          },
          "axialTilt": {
            "type": "number"
          },
          "solidComposition": {
            "type": "object"
          },
          "atmosphere": {
            "type": "object"
          },
          "material": {
            "type": "object"
          },
          "missingSkipCount": {
            "type": "integer",
            "default": 0
          },
          "rings": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "ringName"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "ringName": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "mass": {
                  "type": "number"
                },
                "innerRadius": {
                  "type": "number"
                },
                "outerRadius": {
                  "type": "number"
                }
              }
            }
          },
          "apsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "bmsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "btsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "cssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude",
                "verified"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "fgsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "fmsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gbsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "gssite": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "gbmessage": {
                  "type": "string"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gensites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "shipName"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "shipName": {
                  "type": "string"
                },
                "directionSystem": {
                  "type": "string"
                },
                "distance": {
                  "type": "number"
                },
                "genlogs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "grsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "activeGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "activeObelisks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "hasDatabank": {
                  "type": "boolean"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "activeGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "activeObelisks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gvsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gysites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "lssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "tbsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "subtype": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "cycle": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "tssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "msg1Site": {
                  "type": "string"
                },
                "msg2Site": {
                  "type": "string"
                },
                "msg3Site": {
                  "type": "string"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "twsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude",
                "verified"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewBody": {
        "required": [
          "bodyName"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "bodyName": {
            "type": "string"
          },
          "id64": {
            "type": "integer"
          },
          "edsmID": {
            "type": "integer"
          },
          "bodyID": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "offset": {
            "type": "integer"
          },
          "distanceToArrival": {
            "type": "integer"
          },
          "isMainStar": {
            "type": "boolean"
          },
          "isScoopable": {
            "type": "boolean"
          },
          "isLandable": {
            "type": "boolean"
          },
          "age": {
            "type": "integer"
          },
          "luminosity": {
            "type": "string"
          },
          "absoluteMagnitude": {
            "type": "number"
          },
          "solarMasses": {
            "type": "number"
          },
          "solarRadius": {
            "type": "number"
          },
          "gravity": {
            "type": "number"
          },
          "earthMasses": {
            "type": "number"
          },
          "radius": {
            "type": "number"
          },
          "surfaceTemperature": {
            "type": "number"
          },
          "surfacePressure": {
            "type": "number"
          },
          "volcanismType": {
            "type": "string"
          },
          "atmosphereType": {
            "type": "string"
          },
          "terraformingState": {
            "type": "string"
          },
          "orbitalPeriod": {
            "type": "number"
          },
          "semiMajorAxis": {
            "type": "number"
          },
          "orbitalEccentricity": {
            "type": "number"
          },
          "orbitalInclination": {
            "type": "number"
          },
          "argOfPeriapsis": {
            "type": "number"
          },
          "rotationalPeriod": {
            "type": "number"
          },
          "rotationalPeriodTidallyLocked": {
            "type": "boolean"
          },
          "axialTilt": {
            "type": "number"
          },
          "solidComposition": {
            "type": "object"
          },
          "atmosphere": {
            "type": "object"
          },
          "material": {
            "type": "object"
          },
          "missingSkipCount": {
            "type": "integer",
            "default": 0
          },
          "rings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bmsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "btsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fgsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fmsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gbsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gensites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "grsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gvsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gysites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tbsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "twsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Btreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBtreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Btsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBtsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Bttype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewBttype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Clientreport": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "autoUpdateDisabled": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          }
        }
      },
      "NewClientreport": {
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "autoUpdateDisabled": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          }
        }
      },
      "Clientroute": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "clientVersion": {
            "type": "string"
          },
          "route": {
            "type": "string"
          }
        }
      },
      "NewClientroute": {
        "properties": {
          "clientVersion": {
            "type": "string"
          },
          "route": {
            "type": "string"
          }
        }
      },
      "Cmdr": {
        "required": [
          "id",
          "cmdrName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrkill": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "scoutKills": {
                "type": "integer"
              },
              "cyclopsKills": {
                "type": "integer"
              },
              "basiliskKills": {
                "type": "integer"
              },
              "medusaKills": {
                "type": "integer"
              },
              "unknownKills": {
                "type": "integer"
              },
              "scoutRewards": {
                "type": "integer"
              },
              "cyclopsRewards": {
                "type": "integer"
              },
              "basiliskRewards": {
                "type": "integer"
              },
              "medusaRewards": {
                "type": "integer"
              },
              "unknownRewards": {
                "type": "integer"
              },
              "totalRewards": {
                "type": "integer"
              },
              "totalKills": {
                "type": "integer"
              },
              "cmdr": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewCmdr": {
        "required": [
          "cmdrName"
        ],
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "cmdrkill": {
            "type": "string"
          }
        }
      },
      "Cmdrkill": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "scoutKills": {
            "type": "integer"
          },
          "cyclopsKills": {
            "type": "integer"
          },
          "basiliskKills": {
            "type": "integer"
          },
          "medusaKills": {
            "type": "integer"
          },
          "unknownKills": {
            "type": "integer"
          },
          "scoutRewards": {
            "type": "integer"
          },
          "cyclopsRewards": {
            "type": "integer"
          },
          "basiliskRewards": {
            "type": "integer"
          },
          "medusaRewards": {
            "type": "integer"
          },
          "unknownRewards": {
            "type": "integer"
          },
          "totalRewards": {
            "type": "integer"
          },
          "totalKills": {
            "type": "integer"
          },
          "cmdr": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewCmdrkill": {
        "properties": {
          "scoutKills": {
            "type": "integer"
          },
          "cyclopsKills": {
            "type": "integer"
          },
          "basiliskKills": {
            "type": "integer"
          },
          "medusaKills": {
            "type": "integer"
          },
          "unknownKills": {
            "type": "integer"
          },
          "scoutRewards": {
            "type": "integer"
          },
          "cyclopsRewards": {
            "type": "integer"
          },
          "basiliskRewards": {
            "type": "integer"
          },
          "medusaRewards": {
            "type": "integer"
          },
          "unknownRewards": {
            "type": "integer"
          },
          "totalRewards": {
            "type": "integer"
          },
          "totalKills": {
            "type": "integer"
          },
          "cmdr": {
            "type": "string"
          }
        }
      },
      "Csreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude",
              "verified"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewCsreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Cssite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude",
          "verified"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewCssite": {
        "required": [
          "siteID",
          "latitude",
          "longitude",
          "verified"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Cstype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewCstype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Excludeclient": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "NewExcludeclient": {
        "properties": {
          "version": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Excludecmdr": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "NewExcludecmdr": {
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Excludecodex": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "codexName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "NewExcludecodex": {
        "properties": {
          "codexName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Excludeevent": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "NewExcludeevent": {
        "properties": {
          "eventName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Excludefss": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "fssName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "NewExcludefss": {
        "properties": {
          "fssName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Fgreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewFgreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Fgsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewFgsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Fgtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewFgtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Fmreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewFmreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Fmsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewFmsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Fmtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewFmtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Gbmessage": {
        "required": [
          "id",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gbsite": {
            "required": [
              "id",
              "siteID"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "gssite": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "gbmessage": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "messageSystem": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "messageBody": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          }
        }
      },
      "NewGbmessage": {
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "gbsite": {
            "type": "string"
          },
          "messageSystem": {
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          }
        }
      },
      "Gbreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "messageSystem",
          "messageBody",
          "messageLatitude",
          "messageLongitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "messageSystem": {
            "type": "string",
            "default": ""
          },
          "messageBody": {
            "type": "string",
            "default": ""
          },
          "messageLatitude": {
            "type": "number",
            "default": ""
          },
          "messageLongitude": {
            "type": "number",
            "default": ""
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string",
            "default": ""
          },
          "voteCount": {
            "type": "integer",
            "default": ""
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "gssite": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "gbmessage": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGbreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "messageSystem",
          "messageBody",
          "messageLatitude",
          "messageLongitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "messageSystem": {
            "type": "string",
            "default": ""
          },
          "messageBody": {
            "type": "string",
            "default": ""
          },
          "messageLatitude": {
            "type": "number",
            "default": ""
          },
          "messageLongitude": {
            "type": "number",
            "default": ""
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string",
            "default": ""
          },
          "voteCount": {
            "type": "integer",
            "default": ""
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Gbsite": {
        "required": [
          "id",
          "siteID"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer",
            "default": ""
          },
          "gssite": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "hasDatabank": {
                "type": "boolean"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "boolean",
            "default": false
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "gbmessage": {
            "required": [
              "id",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "gbsite": {
                "type": "string"
              },
              "messageSystem": {
                "type": "string"
              },
              "messageBody": {
                "type": "string"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGbsite": {
        "required": [
          "siteID"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer",
            "default": ""
          },
          "gssite": {
            "type": "string"
          },
          "verified": {
            "type": "boolean",
            "default": false
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "gbmessage": {
            "type": "string"
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Genlog": {
        "required": [
          "id",
          "logNumber",
          "logTitle"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gensite": {
            "required": [
              "id",
              "siteID",
              "shipName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "shipName": {
                "type": "string"
              },
              "directionSystem": {
                "type": "string"
              },
              "distance": {
                "type": "number"
              },
              "genlogs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "logNumber": {
            "type": "integer",
            "default": ""
          },
          "logTitle": {
            "type": "string",
            "default": ""
          },
          "logBody": {
            "type": "string",
            "default": ""
          },
          "audio": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewGenlog": {
        "required": [
          "logNumber",
          "logTitle"
        ],
        "properties": {
          "gensite": {
            "type": "string"
          },
          "logNumber": {
            "type": "integer",
            "default": ""
          },
          "logTitle": {
            "type": "string",
            "default": ""
          },
          "logBody": {
            "type": "string",
            "default": ""
          }
        }
      },
      "Genreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "shipName",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "orbitBody": {
            "type": "string"
          },
          "shipName": {
            "type": "string"
          },
          "directionSystem": {
            "type": "string"
          },
          "distance": {
            "type": "number"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "shipName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "shipName": {
                "type": "string"
              },
              "directionSystem": {
                "type": "string"
              },
              "distance": {
                "type": "number"
              },
              "genlogs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGenreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "shipName",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "orbitBody": {
            "type": "string"
          },
          "shipName": {
            "type": "string"
          },
          "directionSystem": {
            "type": "string"
          },
          "distance": {
            "type": "number"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Gensite": {
        "required": [
          "id",
          "siteID",
          "shipName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "shipName": {
            "type": "string"
          },
          "directionSystem": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "distance": {
            "type": "number"
          },
          "genlogs": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "logNumber",
                "logTitle"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "gensite": {
                  "type": "string"
                },
                "logNumber": {
                  "type": "integer"
                },
                "logTitle": {
                  "type": "string"
                },
                "logBody": {
                  "type": "string"
                },
                "audio": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGensite": {
        "required": [
          "siteID",
          "shipName"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "shipName": {
            "type": "string"
          },
          "directionSystem": {
            "type": "string"
          },
          "distance": {
            "type": "number"
          },
          "genlogs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Gractivegroup": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grSite": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "activeGroup": {
            "required": [
              "id",
              "groupName",
              "amount"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "grType": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        }
      },
      "NewGractivegroup": {
        "properties": {
          "grSite": {
            "type": "string"
          },
          "activeGroup": {
            "type": "string"
          }
        }
      },
      "Gractiveobelisk": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grSite": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "activeObelisk": {
            "required": [
              "id",
              "obeliskNumber"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "grType": {
                "type": "string"
              },
              "grObeliskGroup": {
                "type": "string"
              },
              "obeliskNumber": {
                "type": "integer"
              },
              "broken": {
                "type": "boolean"
              },
              "grCodexData": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "NewGractiveobelisk": {
        "properties": {
          "grSite": {
            "type": "string"
          },
          "activeObelisk": {
            "type": "string"
          }
        }
      },
      "Grartifact": {
        "required": [
          "id",
          "artifactName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "artifactName": {
            "type": "string"
          }
        }
      },
      "NewGrartifact": {
        "required": [
          "artifactName"
        ],
        "properties": {
          "artifactName": {
            "type": "string"
          }
        }
      },
      "Grcodexcategory": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          }
        }
      },
      "NewGrcodexcategory": {
        "properties": {
          "categoryName": {
            "type": "string"
          }
        }
      },
      "Grcodexdata": {
        "required": [
          "id",
          "codexNumber",
          "text"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grCodexCategory": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categoryName": {
                "type": "string"
              }
            }
          },
          "grPrimaryArtifact": {
            "required": [
              "id",
              "artifactName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "artifactName": {
                "type": "string"
              }
            }
          },
          "grSecondaryArtifact": {
            "required": [
              "id",
              "artifactName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "artifactName": {
                "type": "string"
              }
            }
          },
          "codexNumber": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "NewGrcodexdata": {
        "required": [
          "codexNumber",
          "text"
        ],
        "properties": {
          "grCodexCategory": {
            "type": "string"
          },
          "grPrimaryArtifact": {
            "type": "string"
          },
          "grSecondaryArtifact": {
            "type": "string"
          },
          "codexNumber": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Grobelisk": {
        "required": [
          "id",
          "obeliskNumber"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grType": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              }
            }
          },
          "grObeliskGroup": {
            "required": [
              "id",
              "groupName",
              "amount"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "grType": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          },
          "obeliskNumber": {
            "type": "integer"
          },
          "broken": {
            "type": "boolean"
          },
          "grCodexData": {
            "required": [
              "id",
              "codexNumber",
              "text"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "grCodexCategory": {
                "type": "string"
              },
              "grPrimaryArtifact": {
                "type": "string"
              },
              "grSecondaryArtifact": {
                "type": "string"
              },
              "codexNumber": {
                "type": "integer"
              },
              "text": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "NewGrobelisk": {
        "required": [
          "obeliskNumber"
        ],
        "properties": {
          "grType": {
            "type": "string"
          },
          "grObeliskGroup": {
            "type": "string"
          },
          "obeliskNumber": {
            "type": "integer"
          },
          "broken": {
            "type": "boolean"
          },
          "grCodexData": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "Grobeliskgroup": {
        "required": [
          "id",
          "groupName",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grType": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              }
            }
          },
          "groupName": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "NewGrobeliskgroup": {
        "required": [
          "groupName",
          "amount"
        ],
        "properties": {
          "grType": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "Grobeliskreport": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "grreport": {
            "required": [
              "id",
              "userType",
              "reportType",
              "systemName",
              "bodyName",
              "latitude",
              "longitude",
              "type",
              "cmdrName",
              "clientVersion",
              "reportStatus"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "userType": {
                "type": "string"
              },
              "reportType": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "systemAddress": {
                "type": "integer"
              },
              "regionID": {
                "type": "integer"
              },
              "coordX": {
                "type": "number"
              },
              "coordY": {
                "type": "number"
              },
              "coordZ": {
                "type": "number"
              },
              "bodyName": {
                "type": "string"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrComment": {
                "type": "string"
              },
              "isBeta": {
                "type": "boolean"
              },
              "clientVersion": {
                "type": "string"
              },
              "screenshot": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "reportStatus": {
                "type": "string"
              },
              "reportComment": {
                "type": "string"
              },
              "voteCount": {
                "type": "integer"
              },
              "added": {
                "type": "boolean"
              },
              "site": {
                "type": "string"
              },
              "grobeliskreport": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "groups": {
            "type": "object"
          },
          "obelisks": {
            "type": "object"
          }
        }
      },
      "NewGrobeliskreport": {
        "properties": {
          "grreport": {
            "type": "string"
          },
          "groups": {
            "type": "object"
          },
          "obelisks": {
            "type": "object"
          }
        }
      },
      "Grreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "grobeliskreport": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "grreport": {
                  "type": "string"
                },
                "groups": {
                  "type": "object"
                },
                "obelisks": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "NewGrreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          },
          "grobeliskreport": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Grsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "activeGroups": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "grSite": {
                  "type": "string"
                },
                "activeGroup": {
                  "type": "string"
                }
              }
            }
          },
          "activeObelisks": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "grSite": {
                  "type": "string"
                },
                "activeObelisk": {
                  "type": "string"
                }
              }
            }
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGrsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "activeGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activeObelisks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Grtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          }
        }
      },
      "NewGrtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          }
        }
      },
      "Gsactivegroup": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsSite": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "hasDatabank": {
                "type": "boolean"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "activeGroup": {
            "required": [
              "id",
              "groupName",
              "amount"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "gsType": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        }
      },
      "NewGsactivegroup": {
        "properties": {
          "gsSite": {
            "type": "string"
          },
          "activeGroup": {
            "type": "string"
          }
        }
      },
      "Gsactiveobelisk": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsSite": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "hasDatabank": {
                "type": "boolean"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "activeObelisk": {
            "required": [
              "id",
              "obeliskNumber"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "gsType": {
                "type": "string"
              },
              "gsObeliskGroup": {
                "type": "string"
              },
              "obeliskNumber": {
                "type": "integer"
              },
              "broken": {
                "type": "boolean"
              },
              "gsCodexData": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "NewGsactiveobelisk": {
        "properties": {
          "gsSite": {
            "type": "string"
          },
          "activeObelisk": {
            "type": "string"
          }
        }
      },
      "Gsartifact": {
        "required": [
          "id",
          "artifactName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "artifactName": {
            "type": "string"
          }
        }
      },
      "NewGsartifact": {
        "required": [
          "artifactName"
        ],
        "properties": {
          "artifactName": {
            "type": "string"
          }
        }
      },
      "Gscodexcategory": {
        "required": [
          "id",
          "categoryName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          }
        }
      },
      "NewGscodexcategory": {
        "required": [
          "categoryName"
        ],
        "properties": {
          "categoryName": {
            "type": "string"
          }
        }
      },
      "Gscodexdata": {
        "required": [
          "id",
          "codexNumber",
          "text"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsCodexCategory": {
            "required": [
              "id",
              "categoryName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "categoryName": {
                "type": "string"
              }
            }
          },
          "gsPrimaryArtifact": {
            "required": [
              "id",
              "artifactName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "artifactName": {
                "type": "string"
              }
            }
          },
          "gsSecondaryArtifact": {
            "required": [
              "id",
              "artifactName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "artifactName": {
                "type": "string"
              }
            }
          },
          "codexNumber": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "audio": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "sha256": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGscodexdata": {
        "required": [
          "codexNumber",
          "text"
        ],
        "properties": {
          "gsCodexCategory": {
            "type": "string"
          },
          "gsPrimaryArtifact": {
            "type": "string"
          },
          "gsSecondaryArtifact": {
            "type": "string"
          },
          "codexNumber": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Gsobelisk": {
        "required": [
          "id",
          "obeliskNumber"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsType": {
            "required": [
              "id",
              "type",
              "journalName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "blueprint": {
                "type": "string"
              }
            }
          },
          "gsObeliskGroup": {
            "required": [
              "id",
              "groupName",
              "amount"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "gsType": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          },
          "obeliskNumber": {
            "type": "integer"
          },
          "broken": {
            "type": "boolean"
          },
          "gsCodexData": {
            "required": [
              "id",
              "codexNumber",
              "text"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "gsCodexCategory": {
                "type": "string"
              },
              "gsPrimaryArtifact": {
                "type": "string"
              },
              "gsSecondaryArtifact": {
                "type": "string"
              },
              "codexNumber": {
                "type": "integer"
              },
              "text": {
                "type": "string"
              },
              "audio": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "NewGsobelisk": {
        "required": [
          "obeliskNumber"
        ],
        "properties": {
          "gsType": {
            "type": "string"
          },
          "gsObeliskGroup": {
            "type": "string"
          },
          "obeliskNumber": {
            "type": "integer"
          },
          "broken": {
            "type": "boolean"
          },
          "gsCodexData": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "Gsobeliskgroup": {
        "required": [
          "id",
          "groupName",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsType": {
            "required": [
              "id",
              "type",
              "journalName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "blueprint": {
                "type": "string"
              }
            }
          },
          "groupName": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "NewGsobeliskgroup": {
        "required": [
          "groupName",
          "amount"
        ],
        "properties": {
          "gsType": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "Gsobeliskreport": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "gsreport": {
            "required": [
              "id",
              "userType",
              "reportType",
              "systemName",
              "bodyName",
              "latitude",
              "longitude",
              "type",
              "cmdrName",
              "clientVersion",
              "reportStatus"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "userType": {
                "type": "string"
              },
              "reportType": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "systemAddress": {
                "type": "integer"
              },
              "regionID": {
                "type": "integer"
              },
              "coordX": {
                "type": "number"
              },
              "coordY": {
                "type": "number"
              },
              "coordZ": {
                "type": "number"
              },
              "bodyName": {
                "type": "string"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "hasDatabank": {
                "type": "boolean"
              },
              "frontierID": {
                "type": "integer"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrComment": {
                "type": "string"
              },
              "isBeta": {
                "type": "boolean"
              },
              "clientVersion": {
                "type": "string"
              },
              "screenshot": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "reportStatus": {
                "type": "string"
              },
              "reportComment": {
                "type": "string"
              },
              "voteCount": {
                "type": "integer"
              },
              "added": {
                "type": "boolean"
              },
              "site": {
                "type": "string"
              },
              "gsobeliskreport": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "groups": {
            "type": "object"
          },
          "obelisks": {
            "type": "object"
          }
        }
      },
      "NewGsobeliskreport": {
        "properties": {
          "gsreport": {
            "type": "string"
          },
          "groups": {
            "type": "object"
          },
          "obelisks": {
            "type": "object"
          }
        }
      },
      "Gsreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "hasDatabank": {
            "type": "boolean"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "hasDatabank": {
                "type": "boolean"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "activeObelisks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "gsobeliskreport": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "gsreport": {
                  "type": "string"
                },
                "groups": {
                  "type": "object"
                },
                "obelisks": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "NewGsreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "hasDatabank": {
            "type": "boolean"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          },
          "gsobeliskreport": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Gssite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type",
              "journalName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "blueprint": {
                "type": "string"
              }
            }
          },
          "hasDatabank": {
            "type": "boolean"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "activeGroups": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "gsSite": {
                  "type": "string"
                },
                "activeGroup": {
                  "type": "string"
                }
              }
            }
          },
          "activeObelisks": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "gsSite": {
                  "type": "string"
                },
                "activeObelisk": {
                  "type": "string"
                }
              }
            }
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGssite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "hasDatabank": {
            "type": "boolean"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "activeGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activeObelisks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Gstype": {
        "required": [
          "id",
          "type",
          "journalName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "blueprint": {
            "type": "string"
          }
        }
      },
      "NewGstype": {
        "required": [
          "type",
          "journalName"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "blueprint": {
            "type": "string"
          }
        }
      },
      "Gvreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGvreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Gvsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGvsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Gvtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewGvtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Gyreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGyreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Gysite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewGysite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Gytype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewGytype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Hdreport": {
        "required": [
          "id",
          "fromSystemName",
          "toSystemName",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "fromSystemName": {
            "type": "string"
          },
          "toSystemName": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "screenshot": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "sha256": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              }
            }
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "hdRawJson": {
            "type": "object"
          }
        }
      },
      "NewHdreport": {
        "required": [
          "fromSystemName",
          "toSystemName",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "fromSystemName": {
            "type": "string"
          },
          "toSystemName": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "hdRawJson": {
            "type": "object"
          }
        }
      },
      "Killreport": {
        "required": [
          "id",
          "clientVersion"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "edTimestamp": {
            "type": "datetime"
          },
          "cmdrName": {
            "type": "string"
          },
          "reward": {
            "type": "integer"
          },
          "rewardingFaction": {
            "type": "string"
          },
          "victimFaction": {
            "type": "string"
          },
          "rawEvent": {
            "type": "object"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportAccepted": {
            "type": "boolean"
          }
        }
      },
      "NewKillreport": {
        "required": [
          "clientVersion"
        ],
        "properties": {
          "systemName": {
            "type": "string"
          },
          "edTimestamp": {
            "type": "datetime"
          },
          "cmdrName": {
            "type": "string"
          },
          "reward": {
            "type": "integer"
          },
          "rewardingFaction": {
            "type": "string"
          },
          "victimFaction": {
            "type": "string"
          },
          "rawEvent": {
            "type": "object"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportAccepted": {
            "type": "boolean"
          }
        }
      },
      "Lcfssreport": {
        "required": [
          "id",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "signalName": {
            "type": "string"
          },
          "signalNameLocalised": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "NewLcfssreport": {
        "required": [
          "reportStatus"
        ],
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "signalName": {
            "type": "string"
          },
          "signalNameLocalised": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "Lsreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewLsreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Lssite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewLssite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Lstype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewLstype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Materialreport": {
        "required": [
          "id",
          "system",
          "coordX",
          "coordY",
          "coordZ",
          "journalName",
          "clientVersion"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "body": {
            "type": "string"
          },
          "distanceFromMainStar": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "factionState": {
            "type": "string"
          },
          "factionAllegiance": {
            "type": "string"
          },
          "collectedFrom": {
            "type": "string",
            "enum": [
              "missionReward",
              "collected",
              "scanned"
            ]
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          }
        }
      },
      "NewMaterialreport": {
        "required": [
          "system",
          "coordX",
          "coordY",
          "coordZ",
          "journalName",
          "clientVersion"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "body": {
            "type": "string"
          },
          "distanceFromMainStar": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "factionState": {
            "type": "string"
          },
          "factionAllegiance": {
            "type": "string"
          },
          "collectedFrom": {
            "type": "string",
            "enum": [
              "missionReward",
              "collected",
              "scanned"
            ]
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          }
        }
      },
      "Nhssreport": {
        "required": [
          "id",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "nhssRawJson": {
            "type": "object"
          }
        }
      },
      "NewNhssreport": {
        "required": [
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "systemName": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "nhssRawJson": {
            "type": "object"
          }
        }
      },
      "Permitlock": {
        "required": [
          "id",
          "system",
          "region",
          "sector"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          }
        }
      },
      "NewPermitlock": {
        "required": [
          "system",
          "region",
          "sector"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          }
        }
      },
      "Region": {
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "regionID": {
            "type": "integer"
          }
        }
      },
      "NewRegion": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "journalName": {
            "type": "string"
          },
          "regionID": {
            "type": "integer"
          }
        }
      },
      "Reportcodex": {
        "required": [
          "id",
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "systemAddress": {
            "type": "integer"
          },
          "coordX": {
            "type": "number",
            "default": ""
          },
          "coordY": {
            "type": "number",
            "default": ""
          },
          "coordZ": {
            "type": "number",
            "default": ""
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          },
          "frontierID": {
            "type": "integer"
          },
          "entryId": {
            "type": "integer",
            "default": ""
          },
          "codexName": {
            "type": "string",
            "default": ""
          },
          "codexNameLocalised": {
            "type": "string",
            "default": ""
          },
          "subCategory": {
            "type": "string",
            "default": ""
          },
          "subCategoryLocalised": {
            "type": "string",
            "default": ""
          },
          "category": {
            "type": "string",
            "default": ""
          },
          "categoryLocalised": {
            "type": "string",
            "default": ""
          },
          "regionName": {
            "type": "string",
            "default": ""
          },
          "regionLocalised": {
            "type": "string",
            "default": ""
          },
          "voucherAmount": {
            "type": "integer",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "NewReportcodex": {
        "required": [
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "systemAddress": {
            "type": "integer"
          },
          "coordX": {
            "type": "number",
            "default": ""
          },
          "coordY": {
            "type": "number",
            "default": ""
          },
          "coordZ": {
            "type": "number",
            "default": ""
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          },
          "frontierID": {
            "type": "integer"
          },
          "entryId": {
            "type": "integer",
            "default": ""
          },
          "codexName": {
            "type": "string",
            "default": ""
          },
          "codexNameLocalised": {
            "type": "string",
            "default": ""
          },
          "subCategory": {
            "type": "string",
            "default": ""
          },
          "subCategoryLocalised": {
            "type": "string",
            "default": ""
          },
          "category": {
            "type": "string",
            "default": ""
          },
          "categoryLocalised": {
            "type": "string",
            "default": ""
          },
          "regionName": {
            "type": "string",
            "default": ""
          },
          "regionLocalised": {
            "type": "string",
            "default": ""
          },
          "voucherAmount": {
            "type": "integer",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "Reportevent": {
        "required": [
          "id",
          "eventName",
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "eventAltName": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "stationName": {
            "type": "string",
            "default": ""
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "NewReportevent": {
        "required": [
          "eventName",
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "eventName": {
            "type": "string"
          },
          "eventAltName": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "bodyName": {
            "type": "string",
            "default": ""
          },
          "stationName": {
            "type": "string",
            "default": ""
          },
          "latitude": {
            "type": "number",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "Reportfss": {
        "required": [
          "id",
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer",
            "default": ""
          },
          "signalName": {
            "type": "string",
            "default": ""
          },
          "signalNameLocalised": {
            "type": "string",
            "default": ""
          },
          "ussType": {
            "type": "string",
            "default": ""
          },
          "ussTypeLocalised": {
            "type": "string",
            "default": ""
          },
          "spawningState": {
            "type": "string",
            "default": ""
          },
          "spawningStateLocalised": {
            "type": "string",
            "default": ""
          },
          "spawningFaction": {
            "type": "string",
            "default": ""
          },
          "threatLevel": {
            "type": "integer",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "NewReportfss": {
        "required": [
          "cmdrName",
          "systemName",
          "clientVersion",
          "reportStatus",
          "rawJson"
        ],
        "properties": {
          "cmdrName": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer",
            "default": ""
          },
          "signalName": {
            "type": "string",
            "default": ""
          },
          "signalNameLocalised": {
            "type": "string",
            "default": ""
          },
          "ussType": {
            "type": "string",
            "default": ""
          },
          "ussTypeLocalised": {
            "type": "string",
            "default": ""
          },
          "spawningState": {
            "type": "string",
            "default": ""
          },
          "spawningStateLocalised": {
            "type": "string",
            "default": ""
          },
          "spawningFaction": {
            "type": "string",
            "default": ""
          },
          "threatLevel": {
            "type": "integer",
            "default": ""
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "rawJson": {
            "type": "object"
          }
        }
      },
      "Reporttype": {
        "required": [
          "id",
          "type",
          "endpoint"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "default": "body",
            "enum": [
              "body",
              "orbital"
            ]
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          },
          "journalType": {
            "type": "string",
            "default": "codex",
            "enum": [
              "codex",
              "event",
              "fss"
            ]
          },
          "endpoint": {
            "type": "string",
            "default": ""
          }
        }
      },
      "NewReporttype": {
        "required": [
          "type",
          "endpoint"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "default": "body",
            "enum": [
              "body",
              "orbital"
            ]
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          },
          "journalType": {
            "type": "string",
            "default": "codex",
            "enum": [
              "codex",
              "event",
              "fss"
            ]
          },
          "endpoint": {
            "type": "string",
            "default": ""
          }
        }
      },
      "Ring": {
        "required": [
          "id",
          "ringName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "ringName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "mass": {
            "type": "number"
          },
          "innerRadius": {
            "type": "number"
          },
          "outerRadius": {
            "type": "number"
          }
        }
      },
      "NewRing": {
        "required": [
          "ringName"
        ],
        "properties": {
          "body": {
            "type": "string"
          },
          "ringName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "mass": {
            "type": "number"
          },
          "innerRadius": {
            "type": "number"
          },
          "outerRadius": {
            "type": "number"
          }
        }
      },
      "System": {
        "required": [
          "id",
          "systemName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "id64": {
            "type": "integer"
          },
          "edsmID": {
            "type": "integer"
          },
          "edsmCoordX": {
            "type": "number"
          },
          "edsmCoordY": {
            "type": "number"
          },
          "edsmCoordZ": {
            "type": "number"
          },
          "edsmCoordLocked": {
            "type": "boolean"
          },
          "missingSkipCount": {
            "type": "integer",
            "default": 0
          },
          "bodies": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "bodyName"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "bodyName": {
                  "type": "string"
                },
                "id64": {
                  "type": "integer"
                },
                "edsmID": {
                  "type": "integer"
                },
                "bodyID": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "subType": {
                  "type": "string"
                },
                "offset": {
                  "type": "integer"
                },
                "distanceToArrival": {
                  "type": "integer"
                },
                "isMainStar": {
                  "type": "boolean"
                },
                "isScoopable": {
                  "type": "boolean"
                },
                "isLandable": {
                  "type": "boolean"
                },
                "age": {
                  "type": "integer"
                },
                "luminosity": {
                  "type": "string"
                },
                "absoluteMagnitude": {
                  "type": "number"
                },
                "solarMasses": {
                  "type": "number"
                },
                "solarRadius": {
                  "type": "number"
                },
                "gravity": {
                  "type": "number"
                },
                "earthMasses": {
                  "type": "number"
                },
                "radius": {
                  "type": "number"
                },
                "surfaceTemperature": {
                  "type": "number"
                },
                "surfacePressure": {
                  "type": "number"
                },
                "volcanismType": {
                  "type": "string"
                },
                "atmosphereType": {
                  "type": "string"
                },
                "terraformingState": {
                  "type": "string"
                },
                "orbitalPeriod": {
                  "type": "number"
                },
                "semiMajorAxis": {
                  "type": "number"
                },
                "orbitalEccentricity": {
                  "type": "number"
                },
                "orbitalInclination": {
                  "type": "number"
                },
                "argOfPeriapsis": {
                  "type": "number"
                },
                "rotationalPeriod": {
                  "type": "number"
                },
                "rotationalPeriodTidallyLocked": {
                  "type": "boolean"
                },
                "axialTilt": {
                  "type": "number"
                },
                "solidComposition": {
                  "type": "object"
                },
                "atmosphere": {
                  "type": "object"
                },
                "material": {
                  "type": "object"
                },
                "missingSkipCount": {
                  "type": "integer"
                },
                "rings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "apsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bmsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "btsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cssites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fgsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fmsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gbsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gensites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "grsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gssites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gvsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gysites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "lssites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tbsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tssites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "twsites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "region": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "regionID": {
                "type": "integer"
              }
            }
          },
          "primaryStar": {
            "type": "object",
            "default": ""
          },
          "apsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "bmsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "btsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "cssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude",
                "verified"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "fgsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "fmsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gbsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "gssite": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "gbmessage": {
                  "type": "string"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gensites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "shipName"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "shipName": {
                  "type": "string"
                },
                "directionSystem": {
                  "type": "string"
                },
                "distance": {
                  "type": "number"
                },
                "genlogs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "grsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "activeGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "activeObelisks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "hasDatabank": {
                  "type": "boolean"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "activeGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "activeObelisks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gvsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "gysites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "lssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "tbsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "subtype": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "cycle": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "tssites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "msg1Site": {
                  "type": "string"
                },
                "msg2Site": {
                  "type": "string"
                },
                "msg3Site": {
                  "type": "string"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          },
          "twsites": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "siteID",
                "latitude",
                "longitude",
                "verified"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "system": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "siteID": {
                  "type": "integer"
                },
                "extoolID": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "frontierID": {
                  "type": "integer"
                },
                "verified": {
                  "type": "boolean"
                },
                "visible": {
                  "type": "boolean"
                },
                "discoveredBy": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewSystem": {
        "required": [
          "systemName"
        ],
        "properties": {
          "systemName": {
            "type": "string"
          },
          "id64": {
            "type": "integer"
          },
          "edsmID": {
            "type": "integer"
          },
          "edsmCoordX": {
            "type": "number"
          },
          "edsmCoordY": {
            "type": "number"
          },
          "edsmCoordZ": {
            "type": "number"
          },
          "edsmCoordLocked": {
            "type": "boolean"
          },
          "missingSkipCount": {
            "type": "integer",
            "default": 0
          },
          "bodies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "region": {
            "type": "string"
          },
          "primaryStar": {
            "type": "object",
            "default": ""
          },
          "apsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bmsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "btsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fgsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fmsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gbsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gensites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "grsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gvsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gysites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tbsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tssites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "twsites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Tbcycle": {
        "required": [
          "id",
          "cycle"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "cycle": {
            "type": "string"
          }
        }
      },
      "NewTbcycle": {
        "required": [
          "cycle"
        ],
        "properties": {
          "cycle": {
            "type": "string"
          }
        }
      },
      "Tbreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "subtype",
          "cycle",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string",
            "enum": [
              "Mega",
              "Alpha",
              "Beta",
              "Gamma",
              "Delta",
              "Epsilon",
              "Zeta",
              "Unknown"
            ]
          },
          "cycle": {
            "type": "string",
            "enum": [
              "Unknown",
              "A",
              "B",
              "C",
              "ABC"
            ]
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "cycle": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTbreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "type",
          "subtype",
          "cycle",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string",
            "enum": [
              "Mega",
              "Alpha",
              "Beta",
              "Gamma",
              "Delta",
              "Epsilon",
              "Zeta",
              "Unknown"
            ]
          },
          "cycle": {
            "type": "string",
            "enum": [
              "Unknown",
              "A",
              "B",
              "C",
              "ABC"
            ]
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Tbsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "subtype": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "metaAlloyCount": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "cycle": {
            "required": [
              "id",
              "cycle"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cycle": {
                "type": "string"
              }
            }
          },
          "comment": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTbsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cycle": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Tbsubtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "metaAlloyCount": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewTbsubtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "metaAlloyCount": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Tbtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewTbtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "Tsreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "status",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "screenshot": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "hash": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                }
              }
            }
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "msg1Site": {
                "type": "string"
              },
              "msg2Site": {
                "type": "string"
              },
              "msg3Site": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTsreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "status",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Tssite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "status": {
            "required": [
              "id",
              "status"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "msg1Site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "msg1Site": {
                "type": "string"
              },
              "msg2Site": {
                "type": "string"
              },
              "msg3Site": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "msg2Site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "msg1Site": {
                "type": "string"
              },
              "msg2Site": {
                "type": "string"
              },
              "msg3Site": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "msg3Site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "msg1Site": {
                "type": "string"
              },
              "msg2Site": {
                "type": "string"
              },
              "msg3Site": {
                "type": "string"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTssite": {
        "required": [
          "siteID",
          "latitude",
          "longitude"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "msg1Site": {
            "type": "string"
          },
          "msg2Site": {
            "type": "string"
          },
          "msg3Site": {
            "type": "string"
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Tsstatus": {
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "NewTsstatus": {
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "Twreport": {
        "required": [
          "id",
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "required": [
              "id",
              "siteID",
              "latitude",
              "longitude",
              "verified"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "siteID": {
                "type": "integer"
              },
              "extoolID": {
                "type": "integer"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "frontierID": {
                "type": "integer"
              },
              "verified": {
                "type": "boolean"
              },
              "visible": {
                "type": "boolean"
              },
              "discoveredBy": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTwreport": {
        "required": [
          "userType",
          "reportType",
          "systemName",
          "bodyName",
          "latitude",
          "longitude",
          "cmdrName",
          "clientVersion",
          "reportStatus"
        ],
        "properties": {
          "userType": {
            "type": "string",
            "default": "console",
            "enum": [
              "console",
              "pc"
            ]
          },
          "reportType": {
            "type": "string",
            "default": "new",
            "enum": [
              "new",
              "update",
              "error"
            ]
          },
          "systemName": {
            "type": "string"
          },
          "systemAddress": {
            "type": "integer"
          },
          "regionID": {
            "type": "integer"
          },
          "coordX": {
            "type": "number"
          },
          "coordY": {
            "type": "number"
          },
          "coordZ": {
            "type": "number"
          },
          "bodyName": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "cmdrName": {
            "type": "string"
          },
          "cmdrComment": {
            "type": "string"
          },
          "isBeta": {
            "type": "boolean",
            "default": false
          },
          "clientVersion": {
            "type": "string"
          },
          "reportStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "updated",
              "verified",
              "accepted",
              "declined",
              "issue",
              "duplicate"
            ]
          },
          "reportComment": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "added": {
            "type": "boolean",
            "default": false
          },
          "site": {
            "type": "string"
          }
        }
      },
      "Twsite": {
        "required": [
          "id",
          "siteID",
          "latitude",
          "longitude",
          "verified"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "system": {
            "required": [
              "id",
              "systemName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "systemName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "edsmCoordX": {
                "type": "number"
              },
              "edsmCoordY": {
                "type": "number"
              },
              "edsmCoordZ": {
                "type": "number"
              },
              "edsmCoordLocked": {
                "type": "boolean"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "bodies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "region": {
                "type": "string"
              },
              "primaryStar": {
                "type": "object"
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "body": {
            "required": [
              "id",
              "bodyName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "bodyName": {
                "type": "string"
              },
              "id64": {
                "type": "integer"
              },
              "edsmID": {
                "type": "integer"
              },
              "bodyID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "offset": {
                "type": "integer"
              },
              "distanceToArrival": {
                "type": "integer"
              },
              "isMainStar": {
                "type": "boolean"
              },
              "isScoopable": {
                "type": "boolean"
              },
              "isLandable": {
                "type": "boolean"
              },
              "age": {
                "type": "integer"
              },
              "luminosity": {
                "type": "string"
              },
              "absoluteMagnitude": {
                "type": "number"
              },
              "solarMasses": {
                "type": "number"
              },
              "solarRadius": {
                "type": "number"
              },
              "gravity": {
                "type": "number"
              },
              "earthMasses": {
                "type": "number"
              },
              "radius": {
                "type": "number"
              },
              "surfaceTemperature": {
                "type": "number"
              },
              "surfacePressure": {
                "type": "number"
              },
              "volcanismType": {
                "type": "string"
              },
              "atmosphereType": {
                "type": "string"
              },
              "terraformingState": {
                "type": "string"
              },
              "orbitalPeriod": {
                "type": "number"
              },
              "semiMajorAxis": {
                "type": "number"
              },
              "orbitalEccentricity": {
                "type": "number"
              },
              "orbitalInclination": {
                "type": "number"
              },
              "argOfPeriapsis": {
                "type": "number"
              },
              "rotationalPeriod": {
                "type": "number"
              },
              "rotationalPeriodTidallyLocked": {
                "type": "boolean"
              },
              "axialTilt": {
                "type": "number"
              },
              "solidComposition": {
                "type": "object"
              },
              "atmosphere": {
                "type": "object"
              },
              "material": {
                "type": "object"
              },
              "missingSkipCount": {
                "type": "integer"
              },
              "rings": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "btsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fgsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fmsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gensites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "grsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gvsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "gysites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tbsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tssites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "twsites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "journalName": {
                "type": "string"
              },
              "journalID": {
                "type": "integer"
              }
            }
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewTwsite": {
        "required": [
          "siteID",
          "latitude",
          "longitude",
          "verified"
        ],
        "properties": {
          "system": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "siteID": {
            "type": "integer"
          },
          "extoolID": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "frontierID": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean",
            "default": true
          },
          "discoveredBy": {
            "type": "string"
          }
        }
      },
      "Twtype": {
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "NewTwtype": {
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "journalName": {
            "type": "string",
            "default": ""
          },
          "journalID": {
            "type": "integer",
            "default": ""
          }
        }
      },
      "UploadFile": {
        "properties": {
          "name": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "ext": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "mime": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "related": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Users-PermissionsRole": {
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "type",
                "controller",
                "action",
                "enabled"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "action": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "policy": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "username",
                "email"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "resetPasswordToken": {
                  "type": "string"
                },
                "confirmed": {
                  "type": "boolean"
                },
                "blocked": {
                  "type": "boolean"
                },
                "role": {
                  "type": "string"
                },
                "cmdrs": {
                  "type": "string"
                },
                "authtokens": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "NewUsers-PermissionsRole": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Users-PermissionsUser": {
        "required": [
          "id",
          "username",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "cmdrs": {
            "required": [
              "id",
              "cmdrName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "cmdrName": {
                "type": "string"
              },
              "cmdrkill": {
                "type": "string"
              }
            }
          },
          "authtokens": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "token"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewUsers-PermissionsUser": {
        "required": [
          "username",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "resetPasswordToken": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string"
          },
          "cmdrs": {
            "type": "string"
          },
          "authtokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Users-PermissionsRegisterResponse": {
        "properties": {
          "jwt": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/Users-PermissionsUser"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Canonn Use",
      "description": "Endpoints used by Canonn for updating or maintaining the API"
    },
    {
      "name": "Amphora Plant Reports",
      "description": "Public Reporting of AP"
    },
    {
      "name": "Amphora Plants",
      "description": "Code Name - AP"
    },
    {
      "name": "Authtoken"
    },
    {
      "name": "AX Combat Zone Reports",
      "description": "Public Reporting of AX CZ"
    },
    {
      "name": "Bark Mound Reports",
      "description": "Public Reporting of BM"
    },
    {
      "name": "Bark Mounds",
      "description": "Code Name - BM"
    },
    {
      "name": "Bodies",
      "description": "Bodies stored in our API to use as references for sites"
    },
    {
      "name": "Brain Tree Reports",
      "description": "Public Reporting of BT"
    },
    {
      "name": "Brain Trees",
      "description": "Code Name - BT"
    },
    {
      "name": "CMDRs",
      "description": "List of commanders credited with finding sites and their kills"
    },
    {
      "name": "Crystalline Shard Reports",
      "description": "Public Reporting of CS"
    },
    {
      "name": "Crystalline Shards",
      "description": "Code Name - CS"
    },
    {
      "name": "Fungal Gourd Reports",
      "description": "Public Reporting of FG"
    },
    {
      "name": "Fungal Gourds",
      "description": "Code Name - FG"
    },
    {
      "name": "Fumarole Reports",
      "description": "Public Reporting of FM"
    },
    {
      "name": "Fumaroles",
      "description": "Code Name - FM"
    },
    {
      "name": "Guardian Beacons",
      "description": "Code Name - GB"
    },
    {
      "name": "Guardian Beacon Reports",
      "description": "Public Reporting of GB"
    },
    {
      "name": "Generation Ships",
      "description": "Code Name - GEN"
    },
    {
      "name": "Generation Ship Reports",
      "description": "Public Reporting of GEN"
    },
    {
      "name": "Guardian Ruins",
      "description": "Code Name - GR"
    },
    {
      "name": "Guardian Ruin Reports",
      "description": "Public Reporting of GR Obelisk"
    },
    {
      "name": "Guardian Structures",
      "description": "Code Name - GS"
    },
    {
      "name": "Guardian Structure Reports",
      "description": "Public Reporting of GS Obelisk"
    },
    {
      "name": "Gas Vent Reports",
      "description": "Public Reporting of GV"
    },
    {
      "name": "Gas Vents",
      "description": "Code Name - GV"
    },
    {
      "name": "Geyser Reports",
      "description": "Public Reporting of GY"
    },
    {
      "name": "Geysers",
      "description": "Code Name - GY"
    },
    {
      "name": "Hyperdiction Reports",
      "description": "Public Reporting of HD"
    },
    {
      "name": "Lagrange Cloud Reports",
      "description": "Public Reporting of LC"
    },
    {
      "name": "Lava Spout Reports",
      "description": "Public Reporting of LS"
    },
    {
      "name": "Lava Spouts",
      "description": "Code Name - LS"
    },
    {
      "name": "Material Reports",
      "description": "Material reports for Engineering"
    },
    {
      "name": "Non-Human Signal Source Reports",
      "description": "Public Reporting of NHSS"
    },
    {
      "name": "Permit Locks",
      "description": "Permit locked regions"
    },
    {
      "name": "Regions",
      "description": "Regions stored in our API to use as references for systems"
    },
    {
      "name": "Rings",
      "description": "Rings stored in our API to use as references for sites"
    },
    {
      "name": "Systems",
      "description": "Systems stored in our API to use as references for sites"
    },
    {
      "name": "Thargoid Barnacles",
      "description": "Code Name - TB"
    },
    {
      "name": "Thargoid Barnacle Reports",
      "description": "Public Reporting of TB"
    },
    {
      "name": "Thargoid Structure Reports",
      "description": "Public Reporting of TS"
    },
    {
      "name": "Thargoid Structures",
      "description": "Code Name - TS"
    },
    {
      "name": "Tube Worm Reports",
      "description": "Public Reporting of TW"
    },
    {
      "name": "Tube Worms",
      "description": "Code Name - TW"
    },
    {
      "name": "Strapi Usage Only",
      "description": "Models for use by Canonn Admins"
    },
    {
      "name": "Upload - File"
    },
    {
      "name": "Authentication",
      "description": "All the routes related to the authentication",
      "externalDocs": {
        "description": "Find out more in strapi's documentation",
        "url": "https://strapi.io/documentation/guides/authentication.html"
      }
    }
  ]
}